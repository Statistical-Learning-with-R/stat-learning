---
title: "Variable Selection and Regularization"
author: "YOUR NAME HERE"
format: 
  html:
    code-fold: true
    code-line-numbers: true
    code-tools: true
embed-resources: true
editor: source
execute:
  message: false
---

## Setup

Declare your libraries:

```{r}
#| label: packages
#| include: false

library(tidyverse)
library(tidymodels)
library(glmnet)
library(discrim)
library(rpart)
library(rpart.plot)
library(baguette)
library(leaps)

set.seed(98249)
```

## Code from Lecture

```{r}
#| label: data-read-clean

cann <- read_csv("https://www.dropbox.com/s/s2a1uoiegitupjc/cannabis_full.csv?dl=1")

cann <- cann %>%
  dplyr::select(-Type, -Strain, -Effects, -Flavor, -Dry, -Mouth) %>%
  drop_na(Rating)

```

```{r}
#| label: best-subset-selection

models <- regsubsets(Rating ~ Creative + Energetic + Tingly, 
                     data = cann, method = "exhaustive")

summary(models)
```

```{r}
#| label: best-subset-model-summary

model_stats <- tibble(`Adj-R-Squared` = summary(models)$adjr2,
                      `CP` = summary(models)$cp, 
                      `BIC` = summary(models)$bic, 
                      `model` = c("Creative", 
                                  "Creative, Energetic", 
                                  "Creative, Energetic, Tingly"
                                  )
                      ) %>% 
  column_to_rownames(var = "model")

model_stats
```

```{r}
#| label: backward-selection
#| warning: false

models <- regsubsets(Rating ~ ., 
                     data = cann, method = "forward",
                     nvmax = 61)

summary(models)
```

```{r}
#| label: backward-selection-bic

model_bic <- tibble(bic = summary(models)$bic, 
                    model = seq(from = 1, 
                                to = 61, 
                                by = 1
                                )
                    )
model_bic %>% 
  mutate(model = str_c("Model ", model)
         ) %>% 
  arrange(bic) %>% 
  column_to_rownames(var = "model")

```

```{r}
#| label: plotting-bic-backward-selection

ggplot(, aes(x = 1:61, y = bic_scores)) +
  geom_point()
```

```{r}
#| label: finding-min-bic-backward

min_bic <- slice_min(model_bic, order_by = bic) %>% 
  pull(model)

summary(models)$outmat[min_bic, ]
```

## Try it!

1. Determine the best model via **backwards selection**.  
2. Fit that model to the data and report results.

3. Determine the best model via **forwards selection**.  
4. Fit that model to the data and report results.

## Regularization Code from Lecture

```{r}
#| label: lasso-regression

lasso_spec <- linear_reg(penalty = 0.1, mixture = 1) %>%
  set_engine("glmnet") %>%
  set_mode("regression")
```

```{r}
#| label: ridge-regression

ridge_spec <- linear_reg(penalty = 0.1, mixture = 0) %>%
  set_engine("glmnet") %>%
  set_mode("regression")
```

## Try it!

1. Fit a **LASSO** model to the cannabis data with lambda = 0.1.  Then fit one with lambda = 0.5.  What is different?

2. Fit a **Ridge Regression** model to the cannabis data with lambda = 0.1.  Then fit one with lambda = 0.5.  What is different?

3. Which model do you prefer?

4. (Bonus)  What is the best choice of lambda?
